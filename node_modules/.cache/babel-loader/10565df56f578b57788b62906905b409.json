{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/trollhero/Downloads/react-dnd-api-11-2-main/src/pages/MonsterList/MonsterList.jsx\";\n//Add a search box so the entire list doesn't need to load\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMonsterList } from '../../services/api-calls';\n\nclass MonsterList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      monsterList: []\n    };\n  }\n\n  async componentDidMount() {\n    const monsterList = await getMonsterList();\n    this.setState({\n      monsterList: monsterList.results\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"classDiv\",\n        className: \"header3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"HERE BE MONSTERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, this), this.state.monsterList.map(monster => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"classDiv\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: '/monster',\n            state: {\n              monster\n            }\n          },\n          children: monster.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }, this)]\n      }, monster.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true);\n  }\n\n}\n\nexport default MonsterList;","map":{"version":3,"sources":["/home/trollhero/Downloads/react-dnd-api-11-2-main/src/pages/MonsterList/MonsterList.jsx"],"names":["React","Component","Link","getMonsterList","MonsterList","state","monsterList","componentDidMount","setState","results","render","map","monster","pathname","name","index"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCI,KADkC,GAC1B;AACNC,MAAAA,WAAW,EAAE;AADP,KAD0B;AAAA;;AAKlC,QAAMC,iBAAN,GAA0B;AACxB,UAAMD,WAAW,GAAG,MAAMH,cAAc,EAAxC;AACA,SAAKK,QAAL,CAAc;AAAEF,MAAAA,WAAW,EAAEA,WAAW,CAACG;AAA3B,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACG;AAAK,QAAA,EAAE,EAAG,UAAV;AAAqB,QAAA,SAAS,EAAG,SAAjC;AAAA,+BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,cADH,EAIG,KAAKL,KAAL,CAAWC,WAAX,CAAuBK,GAAvB,CAA4BC,OAAD,iBACxB;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA,gCACE,QAAC,IAAD;AACI,UAAA,EAAE,EAAE;AACJC,YAAAA,QAAQ,EAAE,UADN;AAEJR,YAAAA,KAAK,EAAE;AAAEO,cAAAA;AAAF;AAFH,WADR;AAAA,oBAMGA,OAAO,CAACE;AANX;AAAA;AAAA;AAAA;AAAA,gBADF,eAQS;AAAA;AAAA;AAAA;AAAA,gBART;AAAA,SAAwBF,OAAO,CAACG,KAAhC;AAAA;AAAA;AAAA;AAAA,cADH,CAJH;AAAA,oBADF;AAmBD;;AA9BiC;;AAiCpC,eAAeX,WAAf","sourcesContent":["//Add a search box so the entire list doesn't need to load\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { getMonsterList } from '../../services/api-calls'\n\nclass MonsterList extends Component {\n  state = { \n    monsterList: []\n  }\n\n  async componentDidMount() {\n    const monsterList = await getMonsterList()\n    this.setState({ monsterList: monsterList.results })\n  }\n\n  render() { \n    return ( \n      <>\n         <div id = \"classDiv\" className = \"header3\">\n        <h3>HERE BE MONSTERS</h3>\n        </div>\n        {this.state.monsterList.map((monster) => (\n            <div id=\"classDiv\" key={monster.index} >\n              <Link\n                  to={{\n                  pathname: '/monster',\n                  state: { monster }\n                }}\n              >\n                {monster.name}\n              </Link><br></br>\n            </div>\n        ))}\n      </>\n     );\n  }\n}\n \nexport default MonsterList;"]},"metadata":{},"sourceType":"module"}